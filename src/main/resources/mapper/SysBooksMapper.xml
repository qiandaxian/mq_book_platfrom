<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cic.dao.SysBooksMapper">
  <resultMap id="BaseResultMap" type="com.cic.entity.po.SysBooks">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="tag_origin_title" jdbcType="VARCHAR" property="tagOriginTitle" />
    <result column="tag_image" jdbcType="VARCHAR" property="tagImage" />
    <result column="translator" jdbcType="VARCHAR" property="translator" />
    <result column="images_small" jdbcType="VARCHAR" property="imagesSmall" />
    <result column="images_large" jdbcType="VARCHAR" property="imagesLarge" />
    <result column="images_medium" jdbcType="VARCHAR" property="imagesMedium" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="isbn10" jdbcType="VARCHAR" property="isbn10" />
    <result column="isbn13" jdbcType="VARCHAR" property="isbn13" />
    <result column="author_intro" jdbcType="VARCHAR" property="authorIntro" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="totle" jdbcType="INTEGER" property="totle" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />

  </resultMap>
  <select id="getMyBorrowList" resultType="com.cic.entity.dto.MyBorrowDTO" parameterType="Map" >
    SELECT t2.uuid as uuid,t2.isbn10,t2.isbn13,t2.title,t2.author,t2.tag_image as tagImage,t2.summary,t2.images_large as imagesLarge,t2.translator,t1.create_time as borrowTime ,t1.borrow_status,t1.return_time as returnTime
    FROM sys_books_borrow_detail t1 LEFT JOIN sys_books t2 ON t1.sys_books_uuid = t2.uuid
    WHERE
    1=1
      and t1.borrow_status = 0
    <if test="sysUserId != null and sysUserId != ''">
      and t1.sys_user_uuid = #{sysUserId}
      AND t2.company_id = (SELECT t3.company_id FROM sys_user t3 where t3.uuid = #{sysUserId})
    </if>
    ORDER BY t1.create_time DESC
  </select>

  <select id="getMyBorrowTotleByBookId" resultType="Integer"  parameterType="Map">
    SELECT count(*) FROM sys_books_borrow_detail t1 LEFT JOIN sys_books t2 ON t1.sys_books_uuid = t2.uuid
    WHERE 1=1
    <if test="sysBooksId != null and sysBooksId != ''">
    AND t2.uuid = #{sysBooksId}
    </if>
    <if test="companyId != null and companyId != ''">
      and t2.company_id = #{companyId}
    </if>
    AND t1.borrow_status = 0
  </select>

  <select id="getUserBorrowListByBookId" resultType="com.cic.entity.po.SysBooksBorrowDetail" parameterType="Map">
    SELECT t1.* FROM sys_books_borrow_detail t1
    LEFT JOIN sys_books t2 ON t1.sys_books_uuid = t2.uuid
    where 1=1
    <if test="sysBooksId != null and sysBooksId != ''">
    AND t1.sys_books_uuid = #{sysBooksId}
    </if>
    <if test="sysUserId != null and sysUserId != ''">
    AND t1.sys_user_uuid = #{sysUserId}
    AND t2.company_id = (SELECT t3.company_id FROM sys_user t3 where t3.uuid = #{sysUserId})
    </if>
    AND t1.borrow_status = 0
    ORDER BY t1.create_time desc
  </select>

  <select id="getGradeByBookId" parameterType="Map" resultType="Integer" >
    SELECT avg(t1.grade) FROM sys_books_grade t1
    WHERE 1=1
    <if test="sysBooksId != null and sysBooksId != ''">
      and t1.sys_books_uuid = #{sysBooksId}
    </if>
  </select>

  <select id="getSysBooksByIsbn"  parameterType="Map" resultMap="BaseResultMap">
    SELECT * FROM sys_books t1
    WHERE 1=1

    <if test="bookIsbn != null and bookIsbn != ''">
    AND  (t1.isbn10 = #{bookIsbn} OR t1.isbn13 = #{bookIsbn})
    </if>
    <if test="companyId != null and companyId != ''">
    AND t1.company_id = #{companyId}
    </if>
  </select>

  <select id="getBookBorrowList" parameterType="com.cic.entity.vo.BookBorrowListVo" resultType="com.cic.entity.dto.BookBorrowListDTO" >
    SELECT
        t1.uuid AS bookId,
        t1.title  AS  title,
        t1.isbn13  AS isbn13,
        (SELECT count(*) FROM sys_books_borrow_detail t2 WHERE t2.sys_books_uuid = t1.uuid)  as borrowTotle,
        ( SELECT t4.user_name  FROM sys_books_borrow_detail t3 LEFT JOIN sys_user t4 ON t4.uuid = t3.sys_user_uuid WHERE t3.sys_books_uuid = t1.uuid
            ORDER BY t3.create_time DESC LIMIT 1) AS  lastBorrowUserName,
        (SELECT t4.create_time  FROM sys_books_borrow_detail t3 LEFT JOIN sys_user t4 ON t4.uuid = t3.sys_user_uuid WHERE t3.sys_books_uuid = t1.uuid
            ORDER BY t3.create_time DESC LIMIT 1) AS   lastBorrowDate,
        t1.company_id AS    companyId

    FROM
        sys_books t1
        WHERE 1=1
        AND t1.company_id = #{companyId}
        <if test="bookIsbn != null and bookIsbn != ''">
          AND  (t1.isbn10 = #{bookIsbn} OR t1.isbn13 = #{bookIsbn})
        </if>
        <if test=" bookName != null and bookName != '' " >
          AND t1.title LIKE CONCAT('%',#{bookName},'%')
        </if>
         AND  (SELECT count(*) FROM sys_books_borrow_detail t2 WHERE t2.sys_books_uuid = t1.uuid) > 0
  </select>

  <select id="getBookBorrowInfo" parameterType="com.cic.entity.vo.BookBorrowInfoVo" resultType="com.cic.entity.dto.BookBorrowInfoDTO" >
    SELECT
      t2.user_name AS borrowUserName ,
      to_char(t1.create_time, 'YYYY-MM-DD HH24:MI:SS') AS borrowDate,
      CASE WHEN t1.borrow_status = '1' THEN 'true' ELSE 'false' END AS isReturn,
      to_char(t1.return_time, 'YYYY-MM-DD HH24:MI:SS') AS returnDate
    FROM sys_books_borrow_detail t1 LEFT JOIN sys_user t2 ON t2.uuid = t1.sys_user_uuid LEFT JOIN sys_books t3 ON t3.uuid = t1.sys_books_uuid
    WHERE 1=1
    AND t3.uuid = #{bookId}

    <if test=" bookBorrowUserName != null and bookBorrowUserName != '' " >
      AND t2.user_name LIKE CONCAT('%',#{bookBorrowUserName},'%')
    </if>
    <if test=" bookBorrowStartDate != null and bookBorrowStartDate != '' " >
      AND t1.create_time <![CDATA[>=]]> #{bookBorrowStartDate}::timestamp
    </if>
    <if test=" bookBorrowEndDate != null and bookBorrowEndDate != '' " >
      AND t1.create_time  <![CDATA[<=]]> #{bookBorrowEndDate}::timestamp
    </if>
    <if test=" isReturn != null and isReturn != '' " >
      AND t1.borrow_status =  CASE WHEN #{isReturn} = 'true' THEN 1 ELSE 0 END
    </if>
    <if test=" bookBorrowNumberGt != null and bookBorrowNumberGt != '' and bookBorrowNumberGt != '0' " >
      AND
      CASE WHEN t1.borrow_status = 1
      THEN
        to_char(t1.return_time, 'YYYY-MM-dd')::date
      ELSE
        to_char(now() , 'YYYY-MM-dd')::date
      END
      - to_char(t1.create_time , 'YYYY-MM-dd')::date
      <![CDATA[>=]]> ${bookBorrowNumberGt}
    </if>
    ORDER BY t1.create_time DESC
  </select>

  <select id="getUserBorrowList" parameterType="com.cic.entity.vo.UserListVo" resultType="com.cic.entity.dto.UserBorrowListDTO" >
     SELECT
       t1.uuid as userId,
       t1.user_name as userName,
       t1.open_id as openId,
       to_char(t1.create_time,'YYYY-MM-DD HH24:MI:SS') 	as createTime,
       t2.uuid as companyId,
       t2.company_name as companyName ,
       (SELECT COUNT(*) FROM sys_books_borrow_detail t3 LEFT JOIN sys_books t4 ON t3.sys_books_uuid = t4.uuid WHERE 1=1 AND t4.company_id = t1.company_id AND t3.sys_user_uuid = t1.uuid ) AS borrowTotal ,
       (SELECT COUNT(*) FROM sys_books_borrow_detail t3 LEFT JOIN sys_books t4 ON t3.sys_books_uuid = t4.uuid WHERE 1=1 AND t4.company_id = t1.company_id AND t3.sys_user_uuid = t1.uuid AND t3.borrow_status = 0 ) AS unReturnTotal,
	   (SELECT t3.create_time FROM sys_books_borrow_detail t3 LEFT JOIN sys_books t4 ON t3.sys_books_uuid = t4.uuid WHERE 1=1 AND t4.company_id = t1.company_id AND t3.sys_user_uuid = t1.uuid ORDER BY t3.create_time DESC LIMIT 1 ) AS lastBorrowBookDate ,
	   ( SELECT t4.title FROM sys_books_borrow_detail t3 LEFT JOIN sys_books t4 ON t3.sys_books_uuid = t4.uuid WHERE 1=1 AND t4.company_id = t1.company_id AND t3.sys_user_uuid = t1.uuid ORDER BY t3.create_time DESC  LIMIT 1 ) AS lastBorrowBookName
      FROM
      sys_user t1 LEFT JOIN sys_company t2 ON t1.company_id = t2.uuid
      WHERE 1=1
      AND t1.company_id = #{companyId}
      <if test=" openId != null and openId != '' " >
        AND   t1.open_id = #{openId}
      </if>
      <if test=" userName != null and userName != '' " >
        AND t1.user_name LIKE CONCAT('%',#{userName},'%')
      </if>
      AND        (SELECT COUNT(*) FROM sys_books_borrow_detail t3 LEFT JOIN sys_books t4 ON t3.sys_books_uuid = t4.uuid WHERE 1=1 AND t4.company_id = t1.company_id AND t3.sys_user_uuid = t1.uuid ) > 0

  </select>
  <select id="getUserBorrowInfo" parameterType="com.cic.entity.vo.UserBorrowInfoVo" resultType="com.cic.entity.dto.UserBorrowInfoDTO" >
    SELECT
        t4.title AS bookName,
        to_char(t3.create_time,'YYYY-MM-DD HH24:MI:SS') AS borrowDate,
        t3.borrow_status,
        CASE WHEN t3.borrow_status = '1' THEN 'true' ELSE 'false' END AS isReturn,
        to_char(t3.return_time,'YYYY-MM-DD HH24:MI:SS') AS returnDate
    FROM sys_books_borrow_detail t3 LEFT JOIN sys_books t4 ON t3.sys_books_uuid = t4.uuid
    WHERE 1=1
        AND t4.company_id = #{companyId}
        AND t3.sys_user_uuid = #{userId}

    <if test="bookIsbn != null and bookIsbn != ''">
      AND  (t4.isbn10 = #{bookIsbn} OR t4.isbn13 = #{bookIsbn})
    </if>
    <if test=" bookName != null and bookName != '' " >
      AND t4.title LIKE CONCAT('%',#{bookName},'%')
    </if>
    <if test=" bookBorrowStartDate != null and bookBorrowStartDate != '' " >
      AND t3.create_time <![CDATA[>=]]> #{bookBorrowStartDate}::timestamp
    </if>
    <if test=" bookBorrowEndDate != null and bookBorrowEndDate != '' " >
      AND t3.create_time  <![CDATA[<=]]> #{bookBorrowEndDate}::timestamp
    </if>
    <if test=" isReturn != null and isReturn != '' " >
      AND t3.borrow_status =  CASE WHEN #{isReturn} = 'true' THEN 1 ELSE 0 END
    </if>
    <if test=" bookBorrowNumberGt != null and bookBorrowNumberGt != '' " >
      AND
      CASE WHEN t3.borrow_status = 1
      THEN
      to_char(t3.return_time, 'YYYY-MM-dd')::date
      ELSE
      to_char(now() , 'YYYY-MM-dd')::date
      END
      - to_char(t3.create_time , 'YYYY-MM-dd')::date
      <![CDATA[>=]]> ${bookBorrowNumberGt}
    </if>
    ORDER BY t3.create_time DESC

  </select>
  <select id="getBookList" parameterType="com.cic.entity.vo.BookListVo" resultType="com.cic.entity.dto.BookListDTO" >
    select
        t1.uuid as  bookId,
		t1.isbn13 AS bookIsbn,
		t1.title AS bookName,
		t1.totle AS total,
		(SELECT (t1.totle - count(t2.uuid)) FROM sys_books_borrow_detail t2 WHERE t2.sys_books_uuid = t1.uuid AND t2.borrow_status = 0 ) AS stockNumber ,
		(SELECT avg(t3.grade) FROM sys_books_grade t3 WHERE 1=1 and t3.sys_books_uuid = t1.uuid ) AS grade
    FROM
        sys_books t1
    WHERE 1=1
      AND t1.company_id = #{companyId}

    <if test="bookIsbn != null and bookIsbn != ''">
      AND  (t1.isbn10 = #{bookIsbn} OR t1.isbn13 = #{bookIsbn})
    </if>
    <if test=" bookName != null and bookName != '' " >
      AND t1.title LIKE CONCAT('%',#{bookName},'%')
    </if>
    <if test=" stockNumberGt != null and stockNumberGt != '' and stockNumberGt != '0' " >
      <![CDATA[
      AND (SELECT t1.totle - count(t2.uuid) FROM sys_books_borrow_detail t2 WHERE t2.sys_books_uuid = t1.uuid AND t2.borrow_status = 0 ) >=  ${stockNumberGt}
       ]]>
    </if>

  </select>
</mapper>
